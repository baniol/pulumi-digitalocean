// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.DigitalOcean
{
    public static class GetReservedIp
    {
        /// <summary>
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// Get the reserved IP:
        /// 
        /// ```csharp
        /// using Pulumi;
        /// using DigitalOcean = Pulumi.DigitalOcean;
        /// 
        /// class MyStack : Stack
        /// {
        ///     public MyStack()
        ///     {
        ///         var config = new Config();
        ///         var publicIp = config.RequireObject&lt;dynamic&gt;("publicIp");
        ///         var example = Output.Create(DigitalOcean.GetReservedIp.InvokeAsync(new DigitalOcean.GetReservedIpArgs
        ///         {
        ///             IpAddress = publicIp,
        ///         }));
        ///         this.FipOutput = example.Apply(example =&gt; example.DropletId);
        ///     }
        /// 
        ///     [Output("fipOutput")]
        ///     public Output&lt;string&gt; FipOutput { get; set; }
        /// }
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetReservedIpResult> InvokeAsync(GetReservedIpArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetReservedIpResult>("digitalocean:index/getReservedIp:getReservedIp", args ?? new GetReservedIpArgs(), options.WithDefaults());

        /// <summary>
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// Get the reserved IP:
        /// 
        /// ```csharp
        /// using Pulumi;
        /// using DigitalOcean = Pulumi.DigitalOcean;
        /// 
        /// class MyStack : Stack
        /// {
        ///     public MyStack()
        ///     {
        ///         var config = new Config();
        ///         var publicIp = config.RequireObject&lt;dynamic&gt;("publicIp");
        ///         var example = Output.Create(DigitalOcean.GetReservedIp.InvokeAsync(new DigitalOcean.GetReservedIpArgs
        ///         {
        ///             IpAddress = publicIp,
        ///         }));
        ///         this.FipOutput = example.Apply(example =&gt; example.DropletId);
        ///     }
        /// 
        ///     [Output("fipOutput")]
        ///     public Output&lt;string&gt; FipOutput { get; set; }
        /// }
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetReservedIpResult> Invoke(GetReservedIpInvokeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetReservedIpResult>("digitalocean:index/getReservedIp:getReservedIp", args ?? new GetReservedIpInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetReservedIpArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// The allocated IP address of the specific reserved IP to retrieve.
        /// </summary>
        [Input("ipAddress", required: true)]
        public string IpAddress { get; set; } = null!;

        public GetReservedIpArgs()
        {
        }
    }

    public sealed class GetReservedIpInvokeArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// The allocated IP address of the specific reserved IP to retrieve.
        /// </summary>
        [Input("ipAddress", required: true)]
        public Input<string> IpAddress { get; set; } = null!;

        public GetReservedIpInvokeArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetReservedIpResult
    {
        public readonly int DropletId;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string IpAddress;
        public readonly string Region;
        public readonly string Urn;

        [OutputConstructor]
        private GetReservedIpResult(
            int dropletId,

            string id,

            string ipAddress,

            string region,

            string urn)
        {
            DropletId = dropletId;
            Id = id;
            IpAddress = ipAddress;
            Region = region;
            Urn = urn;
        }
    }
}
