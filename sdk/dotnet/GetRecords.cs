// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.DigitalOcean
{
    public static class GetRecords
    {
        /// <summary>
        /// Retrieve information about all DNS records within a domain, with the ability to filter and sort the results.
        /// If no filters are specified, all records will be returned.
        /// </summary>
        public static Task<GetRecordsResult> InvokeAsync(GetRecordsArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetRecordsResult>("digitalocean:index/getRecords:getRecords", args ?? new GetRecordsArgs(), options.WithVersion());
    }


    public sealed class GetRecordsArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// The domain name to search for DNS records
        /// </summary>
        [Input("domain", required: true)]
        public string Domain { get; set; } = null!;

        [Input("filters")]
        private List<Inputs.GetRecordsFilterArgs>? _filters;

        /// <summary>
        /// Filter the results.
        /// The `filter` block is documented below.
        /// </summary>
        public List<Inputs.GetRecordsFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetRecordsFilterArgs>());
            set => _filters = value;
        }

        [Input("sorts")]
        private List<Inputs.GetRecordsSortArgs>? _sorts;

        /// <summary>
        /// Sort the results.
        /// The `sort` block is documented below.
        /// </summary>
        public List<Inputs.GetRecordsSortArgs> Sorts
        {
            get => _sorts ?? (_sorts = new List<Inputs.GetRecordsSortArgs>());
            set => _sorts = value;
        }

        public GetRecordsArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetRecordsResult
    {
        public readonly string Domain;
        public readonly ImmutableArray<Outputs.GetRecordsFilterResult> Filters;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly ImmutableArray<Outputs.GetRecordsRecordResult> Records;
        public readonly ImmutableArray<Outputs.GetRecordsSortResult> Sorts;

        [OutputConstructor]
        private GetRecordsResult(
            string domain,

            ImmutableArray<Outputs.GetRecordsFilterResult> filters,

            string id,

            ImmutableArray<Outputs.GetRecordsRecordResult> records,

            ImmutableArray<Outputs.GetRecordsSortResult> sorts)
        {
            Domain = domain;
            Filters = filters;
            Id = id;
            Records = records;
            Sorts = sorts;
        }
    }
}
