// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.digitalocean.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetCertificateResult {
    private final List<String> domains;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private final String id;
    private final String name;
    private final String notAfter;
    private final String sha1Fingerprint;
    private final String state;
    private final String type;
    private final String uuid;

    @CustomType.Constructor
    private GetCertificateResult(
        @CustomType.Parameter("domains") List<String> domains,
        @CustomType.Parameter("id") String id,
        @CustomType.Parameter("name") String name,
        @CustomType.Parameter("notAfter") String notAfter,
        @CustomType.Parameter("sha1Fingerprint") String sha1Fingerprint,
        @CustomType.Parameter("state") String state,
        @CustomType.Parameter("type") String type,
        @CustomType.Parameter("uuid") String uuid) {
        this.domains = domains;
        this.id = id;
        this.name = name;
        this.notAfter = notAfter;
        this.sha1Fingerprint = sha1Fingerprint;
        this.state = state;
        this.type = type;
        this.uuid = uuid;
    }

    public List<String> domains() {
        return this.domains;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    public String name() {
        return this.name;
    }
    public String notAfter() {
        return this.notAfter;
    }
    public String sha1Fingerprint() {
        return this.sha1Fingerprint;
    }
    public String state() {
        return this.state;
    }
    public String type() {
        return this.type;
    }
    public String uuid() {
        return this.uuid;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetCertificateResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private List<String> domains;
        private String id;
        private String name;
        private String notAfter;
        private String sha1Fingerprint;
        private String state;
        private String type;
        private String uuid;

        public Builder() {
    	      // Empty
        }

        public Builder(GetCertificateResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.domains = defaults.domains;
    	      this.id = defaults.id;
    	      this.name = defaults.name;
    	      this.notAfter = defaults.notAfter;
    	      this.sha1Fingerprint = defaults.sha1Fingerprint;
    	      this.state = defaults.state;
    	      this.type = defaults.type;
    	      this.uuid = defaults.uuid;
        }

        public Builder domains(List<String> domains) {
            this.domains = Objects.requireNonNull(domains);
            return this;
        }
        public Builder domains(String... domains) {
            return domains(List.of(domains));
        }
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        public Builder notAfter(String notAfter) {
            this.notAfter = Objects.requireNonNull(notAfter);
            return this;
        }
        public Builder sha1Fingerprint(String sha1Fingerprint) {
            this.sha1Fingerprint = Objects.requireNonNull(sha1Fingerprint);
            return this;
        }
        public Builder state(String state) {
            this.state = Objects.requireNonNull(state);
            return this;
        }
        public Builder type(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }
        public Builder uuid(String uuid) {
            this.uuid = Objects.requireNonNull(uuid);
            return this;
        }        public GetCertificateResult build() {
            return new GetCertificateResult(domains, id, name, notAfter, sha1Fingerprint, state, type, uuid);
        }
    }
}
