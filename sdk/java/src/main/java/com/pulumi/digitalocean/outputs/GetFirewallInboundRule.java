// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.digitalocean.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetFirewallInboundRule {
    /**
     * @return The ports on which traffic will be allowed
     * specified as a string containing a single port, a range (e.g. &#34;8000-9000&#34;),
     * or &#34;1-65535&#34; to open all ports for a protocol. Required for when protocol is
     * `tcp` or `udp`.
     * 
     */
    private final @Nullable String portRange;
    /**
     * @return The type of traffic to be allowed.
     * This may be one of &#34;tcp&#34;, &#34;udp&#34;, or &#34;icmp&#34;.
     * 
     */
    private final String protocol;
    /**
     * @return An array of strings containing the IPv4
     * addresses, IPv6 addresses, IPv4 CIDRs, and/or IPv6 CIDRs from which the
     * inbound traffic will be accepted.
     * 
     */
    private final @Nullable List<String> sourceAddresses;
    /**
     * @return An array containing the IDs of
     * the Droplets from which the inbound traffic will be accepted.
     * 
     */
    private final @Nullable List<Integer> sourceDropletIds;
    private final @Nullable List<String> sourceKubernetesIds;
    /**
     * @return An array containing the IDs
     * of the Load Balancers from which the inbound traffic will be accepted.
     * 
     */
    private final @Nullable List<String> sourceLoadBalancerUids;
    /**
     * @return A set of names of Tags corresponding to group of
     * Droplets from which the inbound traffic will be accepted.
     * 
     */
    private final @Nullable List<String> sourceTags;

    @CustomType.Constructor
    private GetFirewallInboundRule(
        @CustomType.Parameter("portRange") @Nullable String portRange,
        @CustomType.Parameter("protocol") String protocol,
        @CustomType.Parameter("sourceAddresses") @Nullable List<String> sourceAddresses,
        @CustomType.Parameter("sourceDropletIds") @Nullable List<Integer> sourceDropletIds,
        @CustomType.Parameter("sourceKubernetesIds") @Nullable List<String> sourceKubernetesIds,
        @CustomType.Parameter("sourceLoadBalancerUids") @Nullable List<String> sourceLoadBalancerUids,
        @CustomType.Parameter("sourceTags") @Nullable List<String> sourceTags) {
        this.portRange = portRange;
        this.protocol = protocol;
        this.sourceAddresses = sourceAddresses;
        this.sourceDropletIds = sourceDropletIds;
        this.sourceKubernetesIds = sourceKubernetesIds;
        this.sourceLoadBalancerUids = sourceLoadBalancerUids;
        this.sourceTags = sourceTags;
    }

    /**
     * @return The ports on which traffic will be allowed
     * specified as a string containing a single port, a range (e.g. &#34;8000-9000&#34;),
     * or &#34;1-65535&#34; to open all ports for a protocol. Required for when protocol is
     * `tcp` or `udp`.
     * 
     */
    public Optional<String> portRange() {
        return Optional.ofNullable(this.portRange);
    }
    /**
     * @return The type of traffic to be allowed.
     * This may be one of &#34;tcp&#34;, &#34;udp&#34;, or &#34;icmp&#34;.
     * 
     */
    public String protocol() {
        return this.protocol;
    }
    /**
     * @return An array of strings containing the IPv4
     * addresses, IPv6 addresses, IPv4 CIDRs, and/or IPv6 CIDRs from which the
     * inbound traffic will be accepted.
     * 
     */
    public List<String> sourceAddresses() {
        return this.sourceAddresses == null ? List.of() : this.sourceAddresses;
    }
    /**
     * @return An array containing the IDs of
     * the Droplets from which the inbound traffic will be accepted.
     * 
     */
    public List<Integer> sourceDropletIds() {
        return this.sourceDropletIds == null ? List.of() : this.sourceDropletIds;
    }
    public List<String> sourceKubernetesIds() {
        return this.sourceKubernetesIds == null ? List.of() : this.sourceKubernetesIds;
    }
    /**
     * @return An array containing the IDs
     * of the Load Balancers from which the inbound traffic will be accepted.
     * 
     */
    public List<String> sourceLoadBalancerUids() {
        return this.sourceLoadBalancerUids == null ? List.of() : this.sourceLoadBalancerUids;
    }
    /**
     * @return A set of names of Tags corresponding to group of
     * Droplets from which the inbound traffic will be accepted.
     * 
     */
    public List<String> sourceTags() {
        return this.sourceTags == null ? List.of() : this.sourceTags;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetFirewallInboundRule defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable String portRange;
        private String protocol;
        private @Nullable List<String> sourceAddresses;
        private @Nullable List<Integer> sourceDropletIds;
        private @Nullable List<String> sourceKubernetesIds;
        private @Nullable List<String> sourceLoadBalancerUids;
        private @Nullable List<String> sourceTags;

        public Builder() {
    	      // Empty
        }

        public Builder(GetFirewallInboundRule defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.portRange = defaults.portRange;
    	      this.protocol = defaults.protocol;
    	      this.sourceAddresses = defaults.sourceAddresses;
    	      this.sourceDropletIds = defaults.sourceDropletIds;
    	      this.sourceKubernetesIds = defaults.sourceKubernetesIds;
    	      this.sourceLoadBalancerUids = defaults.sourceLoadBalancerUids;
    	      this.sourceTags = defaults.sourceTags;
        }

        public Builder portRange(@Nullable String portRange) {
            this.portRange = portRange;
            return this;
        }
        public Builder protocol(String protocol) {
            this.protocol = Objects.requireNonNull(protocol);
            return this;
        }
        public Builder sourceAddresses(@Nullable List<String> sourceAddresses) {
            this.sourceAddresses = sourceAddresses;
            return this;
        }
        public Builder sourceAddresses(String... sourceAddresses) {
            return sourceAddresses(List.of(sourceAddresses));
        }
        public Builder sourceDropletIds(@Nullable List<Integer> sourceDropletIds) {
            this.sourceDropletIds = sourceDropletIds;
            return this;
        }
        public Builder sourceDropletIds(Integer... sourceDropletIds) {
            return sourceDropletIds(List.of(sourceDropletIds));
        }
        public Builder sourceKubernetesIds(@Nullable List<String> sourceKubernetesIds) {
            this.sourceKubernetesIds = sourceKubernetesIds;
            return this;
        }
        public Builder sourceKubernetesIds(String... sourceKubernetesIds) {
            return sourceKubernetesIds(List.of(sourceKubernetesIds));
        }
        public Builder sourceLoadBalancerUids(@Nullable List<String> sourceLoadBalancerUids) {
            this.sourceLoadBalancerUids = sourceLoadBalancerUids;
            return this;
        }
        public Builder sourceLoadBalancerUids(String... sourceLoadBalancerUids) {
            return sourceLoadBalancerUids(List.of(sourceLoadBalancerUids));
        }
        public Builder sourceTags(@Nullable List<String> sourceTags) {
            this.sourceTags = sourceTags;
            return this;
        }
        public Builder sourceTags(String... sourceTags) {
            return sourceTags(List.of(sourceTags));
        }        public GetFirewallInboundRule build() {
            return new GetFirewallInboundRule(portRange, protocol, sourceAddresses, sourceDropletIds, sourceKubernetesIds, sourceLoadBalancerUids, sourceTags);
        }
    }
}
