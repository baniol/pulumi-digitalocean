// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.digitalocean.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.digitalocean.outputs.GetFirewallInboundRule;
import com.pulumi.digitalocean.outputs.GetFirewallOutboundRule;
import com.pulumi.digitalocean.outputs.GetFirewallPendingChange;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetFirewallResult {
    /**
     * @return A time value given in ISO8601 combined date and time format
     * that represents when the Firewall was created.
     * 
     */
    private final String createdAt;
    /**
     * @return The list of the IDs of the Droplets assigned to
     * the Firewall.
     * 
     */
    private final List<Integer> dropletIds;
    private final String firewallId;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private final String id;
    private final List<GetFirewallInboundRule> inboundRules;
    /**
     * @return The name of the Firewall.
     * 
     */
    private final String name;
    private final List<GetFirewallOutboundRule> outboundRules;
    /**
     * @return A set of object containing the fields, `droplet_id`,
     * `removing`, and `status`.  It is provided to detail exactly which Droplets
     * are having their security policies updated.  When empty, all changes
     * have been successfully applied.
     * 
     */
    private final List<GetFirewallPendingChange> pendingChanges;
    /**
     * @return A status string indicating the current state of the Firewall.
     * This can be &#34;waiting&#34;, &#34;succeeded&#34;, or &#34;failed&#34;.
     * 
     */
    private final String status;
    /**
     * @return The names of the Tags assigned to the Firewall.
     * 
     */
    private final List<String> tags;

    @CustomType.Constructor
    private GetFirewallResult(
        @CustomType.Parameter("createdAt") String createdAt,
        @CustomType.Parameter("dropletIds") List<Integer> dropletIds,
        @CustomType.Parameter("firewallId") String firewallId,
        @CustomType.Parameter("id") String id,
        @CustomType.Parameter("inboundRules") List<GetFirewallInboundRule> inboundRules,
        @CustomType.Parameter("name") String name,
        @CustomType.Parameter("outboundRules") List<GetFirewallOutboundRule> outboundRules,
        @CustomType.Parameter("pendingChanges") List<GetFirewallPendingChange> pendingChanges,
        @CustomType.Parameter("status") String status,
        @CustomType.Parameter("tags") List<String> tags) {
        this.createdAt = createdAt;
        this.dropletIds = dropletIds;
        this.firewallId = firewallId;
        this.id = id;
        this.inboundRules = inboundRules;
        this.name = name;
        this.outboundRules = outboundRules;
        this.pendingChanges = pendingChanges;
        this.status = status;
        this.tags = tags;
    }

    /**
     * @return A time value given in ISO8601 combined date and time format
     * that represents when the Firewall was created.
     * 
     */
    public String createdAt() {
        return this.createdAt;
    }
    /**
     * @return The list of the IDs of the Droplets assigned to
     * the Firewall.
     * 
     */
    public List<Integer> dropletIds() {
        return this.dropletIds;
    }
    public String firewallId() {
        return this.firewallId;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    public List<GetFirewallInboundRule> inboundRules() {
        return this.inboundRules;
    }
    /**
     * @return The name of the Firewall.
     * 
     */
    public String name() {
        return this.name;
    }
    public List<GetFirewallOutboundRule> outboundRules() {
        return this.outboundRules;
    }
    /**
     * @return A set of object containing the fields, `droplet_id`,
     * `removing`, and `status`.  It is provided to detail exactly which Droplets
     * are having their security policies updated.  When empty, all changes
     * have been successfully applied.
     * 
     */
    public List<GetFirewallPendingChange> pendingChanges() {
        return this.pendingChanges;
    }
    /**
     * @return A status string indicating the current state of the Firewall.
     * This can be &#34;waiting&#34;, &#34;succeeded&#34;, or &#34;failed&#34;.
     * 
     */
    public String status() {
        return this.status;
    }
    /**
     * @return The names of the Tags assigned to the Firewall.
     * 
     */
    public List<String> tags() {
        return this.tags;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetFirewallResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String createdAt;
        private List<Integer> dropletIds;
        private String firewallId;
        private String id;
        private List<GetFirewallInboundRule> inboundRules;
        private String name;
        private List<GetFirewallOutboundRule> outboundRules;
        private List<GetFirewallPendingChange> pendingChanges;
        private String status;
        private List<String> tags;

        public Builder() {
    	      // Empty
        }

        public Builder(GetFirewallResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.createdAt = defaults.createdAt;
    	      this.dropletIds = defaults.dropletIds;
    	      this.firewallId = defaults.firewallId;
    	      this.id = defaults.id;
    	      this.inboundRules = defaults.inboundRules;
    	      this.name = defaults.name;
    	      this.outboundRules = defaults.outboundRules;
    	      this.pendingChanges = defaults.pendingChanges;
    	      this.status = defaults.status;
    	      this.tags = defaults.tags;
        }

        public Builder createdAt(String createdAt) {
            this.createdAt = Objects.requireNonNull(createdAt);
            return this;
        }
        public Builder dropletIds(List<Integer> dropletIds) {
            this.dropletIds = Objects.requireNonNull(dropletIds);
            return this;
        }
        public Builder dropletIds(Integer... dropletIds) {
            return dropletIds(List.of(dropletIds));
        }
        public Builder firewallId(String firewallId) {
            this.firewallId = Objects.requireNonNull(firewallId);
            return this;
        }
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        public Builder inboundRules(List<GetFirewallInboundRule> inboundRules) {
            this.inboundRules = Objects.requireNonNull(inboundRules);
            return this;
        }
        public Builder inboundRules(GetFirewallInboundRule... inboundRules) {
            return inboundRules(List.of(inboundRules));
        }
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        public Builder outboundRules(List<GetFirewallOutboundRule> outboundRules) {
            this.outboundRules = Objects.requireNonNull(outboundRules);
            return this;
        }
        public Builder outboundRules(GetFirewallOutboundRule... outboundRules) {
            return outboundRules(List.of(outboundRules));
        }
        public Builder pendingChanges(List<GetFirewallPendingChange> pendingChanges) {
            this.pendingChanges = Objects.requireNonNull(pendingChanges);
            return this;
        }
        public Builder pendingChanges(GetFirewallPendingChange... pendingChanges) {
            return pendingChanges(List.of(pendingChanges));
        }
        public Builder status(String status) {
            this.status = Objects.requireNonNull(status);
            return this;
        }
        public Builder tags(List<String> tags) {
            this.tags = Objects.requireNonNull(tags);
            return this;
        }
        public Builder tags(String... tags) {
            return tags(List.of(tags));
        }        public GetFirewallResult build() {
            return new GetFirewallResult(createdAt, dropletIds, firewallId, id, inboundRules, name, outboundRules, pendingChanges, status, tags);
        }
    }
}
