// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.digitalocean.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetAccountResult {
    private final Integer dropletLimit;
    private final String email;
    private final Boolean emailVerified;
    private final Integer floatingIpLimit;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private final String id;
    private final String status;
    private final String statusMessage;
    private final String uuid;

    @CustomType.Constructor
    private GetAccountResult(
        @CustomType.Parameter("dropletLimit") Integer dropletLimit,
        @CustomType.Parameter("email") String email,
        @CustomType.Parameter("emailVerified") Boolean emailVerified,
        @CustomType.Parameter("floatingIpLimit") Integer floatingIpLimit,
        @CustomType.Parameter("id") String id,
        @CustomType.Parameter("status") String status,
        @CustomType.Parameter("statusMessage") String statusMessage,
        @CustomType.Parameter("uuid") String uuid) {
        this.dropletLimit = dropletLimit;
        this.email = email;
        this.emailVerified = emailVerified;
        this.floatingIpLimit = floatingIpLimit;
        this.id = id;
        this.status = status;
        this.statusMessage = statusMessage;
        this.uuid = uuid;
    }

    public Integer dropletLimit() {
        return this.dropletLimit;
    }
    public String email() {
        return this.email;
    }
    public Boolean emailVerified() {
        return this.emailVerified;
    }
    public Integer floatingIpLimit() {
        return this.floatingIpLimit;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    public String status() {
        return this.status;
    }
    public String statusMessage() {
        return this.statusMessage;
    }
    public String uuid() {
        return this.uuid;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetAccountResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Integer dropletLimit;
        private String email;
        private Boolean emailVerified;
        private Integer floatingIpLimit;
        private String id;
        private String status;
        private String statusMessage;
        private String uuid;

        public Builder() {
    	      // Empty
        }

        public Builder(GetAccountResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.dropletLimit = defaults.dropletLimit;
    	      this.email = defaults.email;
    	      this.emailVerified = defaults.emailVerified;
    	      this.floatingIpLimit = defaults.floatingIpLimit;
    	      this.id = defaults.id;
    	      this.status = defaults.status;
    	      this.statusMessage = defaults.statusMessage;
    	      this.uuid = defaults.uuid;
        }

        public Builder dropletLimit(Integer dropletLimit) {
            this.dropletLimit = Objects.requireNonNull(dropletLimit);
            return this;
        }
        public Builder email(String email) {
            this.email = Objects.requireNonNull(email);
            return this;
        }
        public Builder emailVerified(Boolean emailVerified) {
            this.emailVerified = Objects.requireNonNull(emailVerified);
            return this;
        }
        public Builder floatingIpLimit(Integer floatingIpLimit) {
            this.floatingIpLimit = Objects.requireNonNull(floatingIpLimit);
            return this;
        }
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        public Builder status(String status) {
            this.status = Objects.requireNonNull(status);
            return this;
        }
        public Builder statusMessage(String statusMessage) {
            this.statusMessage = Objects.requireNonNull(statusMessage);
            return this;
        }
        public Builder uuid(String uuid) {
            this.uuid = Objects.requireNonNull(uuid);
            return this;
        }        public GetAccountResult build() {
            return new GetAccountResult(dropletLimit, email, emailVerified, floatingIpLimit, id, status, statusMessage, uuid);
        }
    }
}
