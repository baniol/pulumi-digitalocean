// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.digitalocean.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetDomainsDomain {
    /**
     * @return (Required) The name of the domain.
     * - `ttl`-  The TTL of the domain.
     * 
     */
    private final String name;
    private final Integer ttl;
    /**
     * @return The uniform resource name of the domain
     * 
     */
    private final String urn;

    @CustomType.Constructor
    private GetDomainsDomain(
        @CustomType.Parameter("name") String name,
        @CustomType.Parameter("ttl") Integer ttl,
        @CustomType.Parameter("urn") String urn) {
        this.name = name;
        this.ttl = ttl;
        this.urn = urn;
    }

    /**
     * @return (Required) The name of the domain.
     * - `ttl`-  The TTL of the domain.
     * 
     */
    public String name() {
        return this.name;
    }
    public Integer ttl() {
        return this.ttl;
    }
    /**
     * @return The uniform resource name of the domain
     * 
     */
    public String urn() {
        return this.urn;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetDomainsDomain defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String name;
        private Integer ttl;
        private String urn;

        public Builder() {
    	      // Empty
        }

        public Builder(GetDomainsDomain defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.name = defaults.name;
    	      this.ttl = defaults.ttl;
    	      this.urn = defaults.urn;
        }

        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        public Builder ttl(Integer ttl) {
            this.ttl = Objects.requireNonNull(ttl);
            return this;
        }
        public Builder urn(String urn) {
            this.urn = Objects.requireNonNull(urn);
            return this;
        }        public GetDomainsDomain build() {
            return new GetDomainsDomain(name, ttl, urn);
        }
    }
}
