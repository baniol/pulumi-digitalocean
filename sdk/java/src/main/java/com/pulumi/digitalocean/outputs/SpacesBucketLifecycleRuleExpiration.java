// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.digitalocean.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class SpacesBucketLifecycleRuleExpiration {
    /**
     * @return Specifies the date/time after which you want applicable objects to expire. The argument uses
     * RFC3339 format, e.g. &#34;2020-03-22T15:03:55Z&#34; or parts thereof e.g. &#34;2019-02-28&#34;.
     * 
     */
    private final @Nullable String date;
    /**
     * @return Specifies the number of days after object creation when the applicable objects will expire.
     * 
     */
    private final @Nullable Integer days;
    /**
     * @return On a versioned bucket (versioning-enabled or versioning-suspended
     * bucket), setting this to true directs Spaces to delete expired object delete markers.
     * 
     */
    private final @Nullable Boolean expiredObjectDeleteMarker;

    @CustomType.Constructor
    private SpacesBucketLifecycleRuleExpiration(
        @CustomType.Parameter("date") @Nullable String date,
        @CustomType.Parameter("days") @Nullable Integer days,
        @CustomType.Parameter("expiredObjectDeleteMarker") @Nullable Boolean expiredObjectDeleteMarker) {
        this.date = date;
        this.days = days;
        this.expiredObjectDeleteMarker = expiredObjectDeleteMarker;
    }

    /**
     * @return Specifies the date/time after which you want applicable objects to expire. The argument uses
     * RFC3339 format, e.g. &#34;2020-03-22T15:03:55Z&#34; or parts thereof e.g. &#34;2019-02-28&#34;.
     * 
     */
    public Optional<String> date() {
        return Optional.ofNullable(this.date);
    }
    /**
     * @return Specifies the number of days after object creation when the applicable objects will expire.
     * 
     */
    public Optional<Integer> days() {
        return Optional.ofNullable(this.days);
    }
    /**
     * @return On a versioned bucket (versioning-enabled or versioning-suspended
     * bucket), setting this to true directs Spaces to delete expired object delete markers.
     * 
     */
    public Optional<Boolean> expiredObjectDeleteMarker() {
        return Optional.ofNullable(this.expiredObjectDeleteMarker);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(SpacesBucketLifecycleRuleExpiration defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable String date;
        private @Nullable Integer days;
        private @Nullable Boolean expiredObjectDeleteMarker;

        public Builder() {
    	      // Empty
        }

        public Builder(SpacesBucketLifecycleRuleExpiration defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.date = defaults.date;
    	      this.days = defaults.days;
    	      this.expiredObjectDeleteMarker = defaults.expiredObjectDeleteMarker;
        }

        public Builder date(@Nullable String date) {
            this.date = date;
            return this;
        }
        public Builder days(@Nullable Integer days) {
            this.days = days;
            return this;
        }
        public Builder expiredObjectDeleteMarker(@Nullable Boolean expiredObjectDeleteMarker) {
            this.expiredObjectDeleteMarker = expiredObjectDeleteMarker;
            return this;
        }        public SpacesBucketLifecycleRuleExpiration build() {
            return new SpacesBucketLifecycleRuleExpiration(date, days, expiredObjectDeleteMarker);
        }
    }
}
