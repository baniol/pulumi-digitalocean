// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.digitalocean.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.digitalocean.outputs.GetTagsFilter;
import com.pulumi.digitalocean.outputs.GetTagsSort;
import com.pulumi.digitalocean.outputs.GetTagsTag;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;

@CustomType
public final class GetTagsResult {
    private final @Nullable List<GetTagsFilter> filters;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private final String id;
    private final @Nullable List<GetTagsSort> sorts;
    private final List<GetTagsTag> tags;

    @CustomType.Constructor
    private GetTagsResult(
        @CustomType.Parameter("filters") @Nullable List<GetTagsFilter> filters,
        @CustomType.Parameter("id") String id,
        @CustomType.Parameter("sorts") @Nullable List<GetTagsSort> sorts,
        @CustomType.Parameter("tags") List<GetTagsTag> tags) {
        this.filters = filters;
        this.id = id;
        this.sorts = sorts;
        this.tags = tags;
    }

    public List<GetTagsFilter> filters() {
        return this.filters == null ? List.of() : this.filters;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    public List<GetTagsSort> sorts() {
        return this.sorts == null ? List.of() : this.sorts;
    }
    public List<GetTagsTag> tags() {
        return this.tags;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetTagsResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable List<GetTagsFilter> filters;
        private String id;
        private @Nullable List<GetTagsSort> sorts;
        private List<GetTagsTag> tags;

        public Builder() {
    	      // Empty
        }

        public Builder(GetTagsResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.filters = defaults.filters;
    	      this.id = defaults.id;
    	      this.sorts = defaults.sorts;
    	      this.tags = defaults.tags;
        }

        public Builder filters(@Nullable List<GetTagsFilter> filters) {
            this.filters = filters;
            return this;
        }
        public Builder filters(GetTagsFilter... filters) {
            return filters(List.of(filters));
        }
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        public Builder sorts(@Nullable List<GetTagsSort> sorts) {
            this.sorts = sorts;
            return this;
        }
        public Builder sorts(GetTagsSort... sorts) {
            return sorts(List.of(sorts));
        }
        public Builder tags(List<GetTagsTag> tags) {
            this.tags = Objects.requireNonNull(tags);
            return this;
        }
        public Builder tags(GetTagsTag... tags) {
            return tags(List.of(tags));
        }        public GetTagsResult build() {
            return new GetTagsResult(filters, id, sorts, tags);
        }
    }
}
