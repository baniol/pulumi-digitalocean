// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.digitalocean.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class AppSpecStaticSiteGit {
    /**
     * @return The name of the branch to use.
     * 
     */
    private final @Nullable String branch;
    /**
     * @return The clone URL of the repo.
     * 
     */
    private final @Nullable String repoCloneUrl;

    @CustomType.Constructor
    private AppSpecStaticSiteGit(
        @CustomType.Parameter("branch") @Nullable String branch,
        @CustomType.Parameter("repoCloneUrl") @Nullable String repoCloneUrl) {
        this.branch = branch;
        this.repoCloneUrl = repoCloneUrl;
    }

    /**
     * @return The name of the branch to use.
     * 
     */
    public Optional<String> branch() {
        return Optional.ofNullable(this.branch);
    }
    /**
     * @return The clone URL of the repo.
     * 
     */
    public Optional<String> repoCloneUrl() {
        return Optional.ofNullable(this.repoCloneUrl);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(AppSpecStaticSiteGit defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable String branch;
        private @Nullable String repoCloneUrl;

        public Builder() {
    	      // Empty
        }

        public Builder(AppSpecStaticSiteGit defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.branch = defaults.branch;
    	      this.repoCloneUrl = defaults.repoCloneUrl;
        }

        public Builder branch(@Nullable String branch) {
            this.branch = branch;
            return this;
        }
        public Builder repoCloneUrl(@Nullable String repoCloneUrl) {
            this.repoCloneUrl = repoCloneUrl;
            return this;
        }        public AppSpecStaticSiteGit build() {
            return new AppSpecStaticSiteGit(branch, repoCloneUrl);
        }
    }
}
