// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.digitalocean.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetSpacesBucketsSort {
    /**
     * @return The sort direction. This may be either `asc` or `desc`.
     * 
     */
    private final @Nullable String direction;
    /**
     * @return Sort the images by this key. This may be one of `bucket_domain_name`, `name`, `region`, or `urn`.
     * 
     */
    private final String key;

    @CustomType.Constructor
    private GetSpacesBucketsSort(
        @CustomType.Parameter("direction") @Nullable String direction,
        @CustomType.Parameter("key") String key) {
        this.direction = direction;
        this.key = key;
    }

    /**
     * @return The sort direction. This may be either `asc` or `desc`.
     * 
     */
    public Optional<String> direction() {
        return Optional.ofNullable(this.direction);
    }
    /**
     * @return Sort the images by this key. This may be one of `bucket_domain_name`, `name`, `region`, or `urn`.
     * 
     */
    public String key() {
        return this.key;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetSpacesBucketsSort defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable String direction;
        private String key;

        public Builder() {
    	      // Empty
        }

        public Builder(GetSpacesBucketsSort defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.direction = defaults.direction;
    	      this.key = defaults.key;
        }

        public Builder direction(@Nullable String direction) {
            this.direction = direction;
            return this;
        }
        public Builder key(String key) {
            this.key = Objects.requireNonNull(key);
            return this;
        }        public GetSpacesBucketsSort build() {
            return new GetSpacesBucketsSort(direction, key);
        }
    }
}
